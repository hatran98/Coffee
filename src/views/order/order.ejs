<!DOCTYPE html>
<html lang="vi">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Đặt Hàng</title>
    <link href="/order.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
</head>

<body>

    <div class="container">
        <h1 class="title">Đặt Hàng</h1>

        <!-- Thông tin đơn hàng -->
        <div class="order-info">
            <h2 class="section-title">Thông tin đơn hàng</h2>

            <!-- Hiển thị các sản phẩm trong đơn hàng -->
            <table class="product-table">
                <thead>
                    <tr>
                        <th>Mã sản phẩm</th>
                        <th>Tên sản phẩm</th>
                        <th>Số lượng</th>
                        <th>Giá</th>
                        <th>Tổng tiền</th>
                    </tr>
                </thead>
                <tbody id="productTableBody">
                    <!-- Các sản phẩm sẽ được thêm vào đây bằng JavaScript -->
                </tbody>
            </table>

            <!-- Hiển thị tổng số tiền phải thanh toán -->
            <div class="total-amount">
                <p><strong>Tổng thành tiền:</strong> <span id="totalAmount">0.00</span> VND</p>
            </div>
        </div>

        <!-- Form nhập thông tin khách hàng và phương thức thanh toán -->
        <h2 class="section-title">Thông tin khách hàng</h2>
        <form id="orderForm" action="/order/submit" method="POST" class="order-form">

            <!-- Tên đầy đủ -->
            <div class="form-group">
                <label for="fullName" class="form-label">Tên đầy đủ:</label>
                <input type="text" id="fullName" name="fullName" class="form-input" required>
            </div>

            <!-- Số điện thoại -->
            <div class="form-group">
                <label for="phone" class="form-label">Số điện thoại:</label>
                <input type="text" id="phone" name="phone" class="form-input" required>
            </div>

            <div class="form-group">
                <label for="discountCode" class="form-label">Mã giảm giá:</label>
                <input type="text" id="discountCode" name="discountCode" class="form-input">
                <button type="button" id="applyDiscount" class="apply-button">Áp dụng</button>
            </div>

            <h3 class="payment-method-title">Phương thức thanh toán</h3>

            <!-- Phương thức thanh toán -->
            <div class="payment-method">
                <!-- Thanh toán qua SePay sẽ được chọn mặc định -->
                <label class="payment-option">
                    <input type="radio" name="paymentMethod" value="sepay" required checked>
                    Thanh toán qua SePay
                </label>

                <!-- Tạm thời comment lại phương thức thanh toán COD -->
                <!--
                <label class="payment-option">
                    <input type="radio" name="paymentMethod" value="cod" required>
                    Thanh toán khi nhận hàng (COD)
                </label>
                -->
            </div>

            <!-- Nút Đặt hàng -->
            <button type="submit" class="submit-button">Đặt hàng</button>
        </form>

        <!-- Quay lại trang chủ -->
        <div class="back-home">
            <button onclick="window.location.href='/'" class="back-button">Quay lại trang chủ</button>
        </div>
    </div>

    <div id="codModal" class="modal">
        <div class="modal-content">
            <h2>Đặt hàng thành công!</h2>
            <p>Đơn hàng của bạn sẽ được giao trong thời gian sớm nhất.</p>
            <button onclick="closeModal('codModal')" class="modal-close">Đóng</button>
        </div>
    </div>

    <div id="modalOverlay" class="modal-overlay"></div>

    <!-- Modal -->
    <div id="sepayModal" class="modal">
        <button class="close-btn" onclick="closeModal('sepayModal')">&times;</button>
        <div class="modal-content">
            <h3>Quét mã QR để thanh toán</h3>
            <img id="sepayQrCode" src="" alt="QR Code" />
            <p id="paymentInfo" style="text-align: center; margin-top: 10px;">
                Nếu đã thanh toán rồi, <a href="javascript:void(0);" onclick="checkPaymentStatus()">ấn vào đây</a>
            </p>
        </div>

    </div>
    </div>

    <!-- Overlay nền tối -->
    <div id="overlay" class="overlay"></div>

    <script>

        // Hàm mở modal
        function openModal(modalId) {
            document.getElementById(modalId).style.display = "block";  // Hiển thị modal
            document.getElementById('overlay').style.display = "block";  // Hiển thị overlay
        }

        // Hàm đóng modal
        function closeModal(modalId) {
            document.getElementById(modalId).style.display = "none";  // Ẩn modal
            document.getElementById('overlay').style.display = "none";  // Ẩn overlay
        }

        // Hàm lấy dữ liệu đơn hàng từ localStorage và cập nhật bảng
        function loadOrderDetails() {
        const specialProductOrderdetails = JSON.parse(localStorage.getItem('specialProductsOrderdetails')) || []; 
        const productOrderdetails = JSON.parse(localStorage.getItem('productsOrderdetails')) || []; // Lấy sản phẩm bình thường

        // Kết hợp cả hai mảng sản phẩm lại nếu cần thiết
        const allOrderDetails = [...specialProductOrderdetails, ...productOrderdetails];

        if (allOrderDetails.length > 0) {
            let totalAmount = 0;
            const tableBody = document.getElementById('productTableBody');
            allOrderDetails.forEach(product => {
                const row = document.createElement('tr');
                row.innerHTML = `
                    <td>${product.productCode || product.productName}</td>
                    <td>${product.productName}</td>
                    <td>${product.quantity}</td>
                    <td>${product.price} VND</td>
                    <td class="total-price">${(product.quantity * product.price).toFixed(2)} VND</td>
                `;
                tableBody.appendChild(row);
                totalAmount += product.quantity * product.price;
            });

            document.getElementById('totalAmount').innerText = totalAmount.toFixed(2);
        }
    }

        // Gọi hàm để load dữ liệu khi trang được tải
        window.onload = loadOrderDetails;

        // Xử lý submit form và hiển thị modal
        async function processPayment(orderData) {
            try {
                const response = await fetch('/sepay/process-sepay-payment', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(orderData)
                });

                const data = await response.json();

                if (data.success) {
                    // Nếu thanh toán thành công, trả về URL mã QR
                    return data.qrCodeUrl;
                } else {
                    alert('Thanh toán không thành công: ' + data.message);
                    return null;
                }
            } catch (error) {
                console.error('Có lỗi xảy ra khi thanh toán:', error);
                alert('Có lỗi xảy ra khi thanh toán');
                return null;
            }
        }

        // Sử dụng hàm này trong sự kiện submit của form
        document.getElementById('orderForm').addEventListener('submit', async function (event) {
            event.preventDefault(); // Ngăn hành vi mặc định của form

            // Lấy thông tin đơn hàng từ form
            const fullName = document.getElementById('fullName').value;
            const phone = document.getElementById('phone').value;
            const discountCode = document.getElementById('discountCode').value || null;
            const totalAmount = parseFloat(document.getElementById('totalAmount').innerText);

            // Tạo object dữ liệu cho đơn hàng
            const orderData = {
                customer: {
                    fullName: fullName,
                    phone: phone
                },
                discountCode: discountCode,
                amount: totalAmount,
                products: JSON.parse(localStorage.getItem('productsOrderdetails') || '[]'), // Lấy thông tin sản phẩm từ localStorage
                special_product: JSON.parse(localStorage.getItem('specialProductsOrderdetails') || '[]')
            };

            try {
                // Gọi API để lấy tài khoản ngân hàng
                const bankAccountResponse = await fetch('/settings/fetch-settings', {
                    method: 'GET', // Giả sử API là GET
                    headers: {
                        'Content-Type': 'application/json',
                    },
                });

                const bankAccountData = await bankAccountResponse.json();

                if (bankAccountData && bankAccountData.bank_account_number && bankAccountData.bank_name) {
                    const bankAccount = bankAccountData.bank_account_number;
                    const bankName = bankAccountData.bank_name;

                    const createOrderResponse = await fetch('/orders', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify(orderData)
                    });

                    const createOrderResult = await createOrderResponse.json();
                    const orderId = createOrderResult.order._id;
                    const paymentData = {
                        account: bankAccount,
                        bank: bankName,
                        amount: totalAmount,
                        description: `Don hang ${orderId}${discountCode ? ' - Ma: ' + discountCode : ''}` 
                    };

                    if (orderId) {
                        localStorage.setItem('orderId', orderId);
                    }
                    const qrCodeUrl = await processPayment(paymentData);

                    if (qrCodeUrl) {
                        document.getElementById('sepayQrCode').src = qrCodeUrl;
                        openModal('sepayModal');
                    } else {
                        console.error("No QR Code URL received");
                    }
                } else {
                    console.error("Không thể lấy tài khoản ngân hàng từ settings.");
                    alert("Lỗi khi lấy thông tin tài khoản ngân hàng.");
                }
            } catch (error) {
                console.error("Lỗi khi xử lý đơn hàng hoặc thanh toán:", error);
                alert("Đã có lỗi xảy ra. Vui lòng thử lại sau.");
            }
        });

        document.getElementById('applyDiscount').addEventListener('click', function () {
            const discountCode = document.getElementById('discountCode').value;

            if (!discountCode) {
               discountCode = null;
            }

            fetch('/settings/check-discount', {  // Đổi URL này thành URL endpoint của backend của bạn
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ code: discountCode })
            })
                .then(response => response.json())
                .then(data => {
                    if (data.discount) {
                        const discountAmount = data.discount.amount;
                        const totalAmount = parseFloat(document.getElementById('totalAmount').innerText);
                        const discountType = data.discount.type;  // Kiểu giảm giá (fixed hay percentage)

                        let newTotal;

                        if (discountType === 'fixed') {
                            // Trừ số tiền cố định
                            newTotal = totalAmount - discountAmount;
                        } else if (discountType === 'percentage') {
                            // Trừ theo phần trăm
                            newTotal = totalAmount - (totalAmount * (discountAmount / 100));  // discountAmount là tỷ lệ phần trăm
                        }

                        // Cập nhật lại tổng tiền sau khi giảm giá
                        document.getElementById('totalAmount').innerText = newTotal.toFixed(2);
                        alert('Mã giảm giá đã được áp dụng!');

                        // Khoá ô nhập và nút áp dụng sau khi thành công
                        document.getElementById('discountCode').disabled = true;
                        document.getElementById('applyDiscount').disabled = true;
                    } else {
                        alert('Mã giảm giá không hợp lệ!');
                    }
                })
                .catch(error => {
                    console.error('Có lỗi xảy ra:', error);
                    alert('Đã có lỗi xảy ra khi xác thực mã giảm giá');
                });
        });

        function openModal(modalId) {
            document.getElementById(modalId).style.display = 'block';
            document.getElementById('modalOverlay').style.display = 'block';
        }

        function closeModal(modalId) {
            document.getElementById(modalId).style.display = 'none';
            document.getElementById('modalOverlay').style.display = 'none';
        }

        async function checkPaymentStatus() {
            try {
                const orderId = localStorage.getItem('orderId');

                const response = await fetch(`/sepay/check-payment/${orderId}`, {
                    method: 'GET',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                });

                const data = await response.json();

                if (data.success === true) {
                    alert('Thanh toán thành công!');
                    localStorage.removeItem('orderId');
                    localStorage.removeItem('orderDetails');
                    window.location.href = '/'
                } else {
                    confirm("Đơn hàng chưa thanh toán , vui lòng kiểm tra lại")
                }
            } catch (error) {
                console.error('Lỗi khi gọi API:', error);
                alert('Đã có lỗi xảy ra khi kiểm tra trạng thái thanh toán.');
            }
        }
    </script>
</body>

</html>